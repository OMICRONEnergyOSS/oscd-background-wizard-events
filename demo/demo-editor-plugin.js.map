{"version":3,"file":"demo-editor-plugin.js","sourceRoot":"","sources":["../../demo/demo-editor-plugin.ts"],"names":[],"mappings":"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","sourcesContent":["import { css, html, LitElement } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport type WizardDialog from '@omicronenergy/oscd-edit-dialog/OscdEditDialog.js';\n\nimport { XMLEditor } from '@omicronenergy/oscd-editor';\nimport {\n  emptyWizard,\n  wizards,\n} from '@omicronenergy/oscd-edit-dialog/wizards.js';\nimport { newCreateWizardEvent, newEditWizardEvent } from '../foundation.js';\n\nfunction prettyPrintXml(xml: XMLDocument | Element): string {\n  const serializer = new XMLSerializer();\n  const xmlStr = serializer.serializeToString(xml);\n\n  // Insert line breaks between tags\n  const xmlString = xmlStr.replace(/>(\\s*)</g, '>\\n<');\n  let formatted = '';\n  let pad = 0;\n\n  xmlString.split('\\n').forEach(node => {\n    if (node.match(/^<\\/[^>]+>/)) {\n      pad -= 2;\n    } // Closing tag\n    if (pad < 0) {\n      pad = 0;\n    }\n    formatted += ' '.repeat(pad) + node + '\\n';\n    if (node.match(/^<[^!?/][^>]*[^/]>$/)) {\n      pad += 2;\n    } // Opening tag (not self-closing, not comment/doctype)\n  });\n\n  return formatted.trim();\n}\n\nconst supportedCreateTagNames = Object.entries(wizards)\n  .filter(([, value]) => value.create !== emptyWizard)\n  .map(([key]) => key);\n\nconst supportedEditTagNames = Object.entries(wizards)\n  .filter(([, value]) => value.edit !== emptyWizard)\n  .map(([key]) => key);\n\nexport default class TriggerWizard extends LitElement {\n  @property()\n  doc!: XMLDocument;\n\n  @property()\n  editor!: XMLEditor;\n\n  @property()\n  editCount!: unknown;\n\n  @query('#newTagName') newTagName!: HTMLSelectElement;\n\n  @query('#parentSelector') parentSelector!: HTMLInputElement;\n\n  @query('#childtag') childinput!: HTMLInputElement;\n\n  @query('#tagSelector') tagSelector!: HTMLInputElement;\n\n  @query('oscd-edit-dialog') editDialog!: WizardDialog;\n\n  async triggerWizardCreate(): Promise<void> {\n    const parent = this.doc.querySelector(this.parentSelector.value);\n    const tagName = this.newTagName.value;\n    if (!parent || !tagName) {\n      return;\n    }\n\n    this.dispatchEvent(newCreateWizardEvent(parent, tagName));\n    this.requestUpdate();\n    console.log(new XMLSerializer().serializeToString(this.doc));\n  }\n\n  async triggerWizardEdit(): Promise<void> {\n    const element = this.doc.querySelector(this.tagSelector.value);\n\n    if (!element) {\n      this.tagSelector.setCustomValidity('Terrible selector, try again.');\n      this.tagSelector.reportValidity();\n      return;\n    } else if (!supportedEditTagNames.includes(element.tagName)) {\n      this.tagSelector.setCustomValidity(\n        'This tag name is not currently supported.',\n      );\n      this.tagSelector.reportValidity();\n      return;\n    } else {\n      this.tagSelector.setCustomValidity('');\n    }\n\n    this.dispatchEvent(newEditWizardEvent(element));\n    this.requestUpdate();\n  }\n\n  render() {\n    return html`<div class=\"card\">\n        <h2>Add Element</h2>\n        <p>\n          Use this section to trigger the oscd-edit-dialog to Add/Inert the\n          specified Element to the specified Parent\n        </p>\n        <label>Parent Selector:</label\n        ><input id=\"parentSelector\" value=\"Substation\" />\n        <label for=\"newTagName\">Tag Name:</label\n        ><select id=\"newTagName\">\n          ${supportedCreateTagNames.map(\n            tagName => html`<option value=${tagName}>${tagName}</option>`,\n          )}\n        </select>\n        <button @click=\"${this.triggerWizardCreate}\">Add</button>\n      </div>\n\n      <div class=\"card\">\n        <h2>Edit existing Element</h2>\n        <p>\n          Use this section to trigger the oscd-edit-dialog to Edit the specified\n          existing Element\n        </p>\n        <label>Tag Selector</label>\n        <div>\n          <input\n            id=\"tagSelector\"\n            value=\"Substation\"\n            aria-describedby=\"supportedEditElements\"\n          />\n          <div\n            role=\"tooltip\"\n            id=\"supportedEditElements\"\n            aria-label=\"Supported Elements for Editing\"\n          >\n            <h3>Supported Elements for Editing</h3>\n            <ul>\n              ${supportedEditTagNames.map(tagName => html`<li>${tagName}</li>`)}\n            </ul>\n          </div>\n        </div>\n        <button @click=\"${this.triggerWizardEdit}\">Edit</button>\n      </div>\n\n      <div class=\"card\">\n        <h2>Document Content</h2>\n        <pre style=\"white-space: break-spaces\">${prettyPrintXml(this.doc)}</pre>\n      </div> `;\n  }\n\n  static styles = css`\n    .card {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      gap: 1rem 2rem;\n      align-items: center;\n      justify-items: center;\n      padding: 2rem;\n      background: #fafbfc;\n      border-radius: 8px;\n      max-width: 500px;\n      margin: 2rem auto;\n    }\n\n    .card h2,\n    .card p,\n    .card button {\n      grid-column: 1 / -1;\n      text-align: center;\n      margin-block: 0;\n    }\n\n    .card label,\n    .card select,\n    .card input,\n    .card > div,\n    .card button {\n      width: 100%;\n    }\n\n    .card button {\n      text-align: center;\n    }\n\n    [role='tooltip'],\n    .hide-tooltip.hide-tooltip.hide-tooltip + [role='tooltip'] {\n      visibility: hidden;\n      position: absolute;\n      background: black;\n      color: white;\n      padding: 1rem;\n      border-radius: 8px;\n    }\n    [aria-describedby]:hover,\n    [aria-describedby]:focus {\n      position: relative;\n    }\n    [aria-describedby]:hover + [role='tooltip'],\n    [aria-describedby]:focus + [role='tooltip'] {\n      visibility: visible;\n    }\n  `;\n}\n"]}